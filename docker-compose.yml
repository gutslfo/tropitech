services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: tropitech-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - tropitech-network
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:5000
    depends_on:
      backend:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: tropitech-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      - tropitech-network
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb+srv://etaris:vdLpN5ohu9iXc2bT@cluster0.jbpwf.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - PORT=5000
      - FRONTEND_URL=http://frontend:3000
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - tickets:/app/server/tickets
      - qrcodes:/app/server/qrcodes
      - assets:/app/server/assets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  tropitech-network:
    driver: bridge

volumes:
  tickets:
  qrcodes:
  assets: