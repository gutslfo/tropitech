// test-email.js
// Cr√©ez ce fichier √† la racine de votre projet et ex√©cutez-le avec: node test-email.js
require('dotenv').config();
const nodemailer = require('nodemailer');

async function testEmail() {
  console.log("üß™ Test d'envoi d'email");
  console.log("üìã Configuration:");
  console.log(`- Email utilisateur: ${process.env.EMAIL_USER ? '‚úì D√©fini' : '‚ùå Non d√©fini'}`);
  console.log(`- Mot de passe email: ${process.env.EMAIL_PASS ? '‚úì D√©fini' : '‚ùå Non d√©fini'}`);

  // V√©rification des variables d'environnement
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    console.error("‚ùå EMAIL_USER ou EMAIL_PASS non d√©fini dans le fichier .env");
    console.log("Cr√©ez un fichier .env √† la racine avec:");
    console.log("EMAIL_USER=votre_email@gmail.com");
    console.log("EMAIL_PASS=votre_mot_de_passe_d_application");
    return;
  }

  try {
    // Cr√©ation du transporteur
    const transporter = nodemailer.createTransport({
      service: "gmail",
      auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS
      },
      debug: true, // Activer les logs d√©taill√©s
    });

    // V√©rification de la connexion
    console.log("üîÑ V√©rification de la connexion au service d'email...");
    await transporter.verify();
    console.log("‚úÖ Connexion au service d'email r√©ussie");

    // Envoi d'un email de test
    const info = await transporter.sendMail({
      from: {
        name: 'Test Tropitech',
        address: process.env.EMAIL_USER
      },
      to: process.env.EMAIL_USER, // Envoi √† soi-m√™me pour le test
      subject: "Test d'envoi d'email Tropitech",
      text: "Ceci est un email de test pour v√©rifier la configuration d'envoi d'email.",
      html: `
        <div style="font-family: Arial, sans-serif; padding: 20px; max-width: 600px; margin: 0 auto; border: 1px solid #eee; border-radius: 5px;">
          <h2 style="color: #6200ea;">Test d'envoi d'email Tropitech</h2>
          <p>Ceci est un email de test pour v√©rifier que la configuration d'envoi fonctionne correctement.</p>
          <p>Date et heure d'envoi: ${new Date().toLocaleString()}</p>
          <p>Si vous recevez cet email, la configuration est correcte! üéâ</p>
        </div>
      `
    });

    console.log("‚úÖ Email de test envoy√© avec succ√®s:");
    console.log(`- ID du message: ${info.messageId}`);
    console.log(`- URL de pr√©visualisation: ${nodemailer.getTestMessageUrl(info)}`);
    console.log(`- Envoy√© √†: ${process.env.EMAIL_USER}`);
    
    console.log("\nüìù √âtapes suivantes:");
    console.log("1. V√©rifiez votre bo√Æte de r√©ception ET vos dossiers spam/ind√©sirables");
    console.log("2. Si vous ne recevez pas l'email, v√©rifiez que votre compte Gmail autorise les 'applications moins s√©curis√©es'");
    console.log("   ou utilisez un mot de passe d'application: https://myaccount.google.com/apppasswords");

  } catch (error) {
    console.error("‚ùå Erreur lors du test d'envoi d'email:");
    console.error(error);
    
    if (error.code === 'EAUTH') {
      console.log("\nüîë Probl√®me d'authentification d√©tect√©:");
      console.log("1. V√©rifiez que votre email et mot de passe sont corrects");
      console.log("2. Pour Gmail, activez la validation en 2 √©tapes puis cr√©ez un 'mot de passe d'application'");
      console.log("   √†: https://myaccount.google.com/apppasswords");
      console.log("3. Utilisez ce mot de passe d'application comme EMAIL_PASS dans votre .env");
    }
  }
}

testEmail();